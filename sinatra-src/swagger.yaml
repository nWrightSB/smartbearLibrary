---
swagger: "2.0"
info:
  description: "get books, authors, subjects"
  version: "1.0"
  title: "Working Library"
host: "virtserver.swaggerhub.com"
basePath: "/personalAPIs/WorkingLibrary/1.0"
tags:
- name: "admins"
  description: "Secured Admin-only calls"
- name: "users"
  description: "Resources available to regular users"
schemes:
- "https"
paths:
  /books:
    get:
      tags:
      - "users"
      summary: "searches books"
      description: "Returns array based on book search params."
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "query"
        description: "title search parameter"
        required: false
        type: "string"
      - name: "author"
        in: "query"
        description: "author search parameter"
        required: false
        type: "string"
      - name: "subject"
        in: "query"
        description: "subject search parameter"
        required: false
        type: "string"
      responses:
        200:
          description: "book successfully created"
          schema:
            $ref: "#/definitions/AllBooks"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
    post:
      tags:
      - "users"
      summary: "create new book resource"
      description: "Creates a new book in the DB, on success returns book json object"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "new book object"
        description: "book description"
        required: true
        schema:
          $ref: "#/definitions/new book object"
      responses:
        201:
          description: "book successfully created"
          schema:
            $ref: "#/definitions/Book"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
  /books/{id}:
    get:
      tags:
      - "users"
      summary: "returns book object"
      description: "Returns array based of search params."
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "book id"
        required: true
        type: "integer"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            $ref: "#/definitions/inline_response_200"
        204:
          description: "no matching results"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
    delete:
      tags:
      - "users"
      summary: "remove book resource"
      description: "Returns deleted object"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "resource successfully removed"
          schema:
            $ref: "#/definitions/Book"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
  /authors:
    get:
      tags:
      - "users"
      summary: "searches authors"
      description: "Returns array based on author search params."
      produces:
      - "application/json"
      parameters:
      - name: "first_name"
        in: "query"
        description: "first name search parameter"
        required: false
        type: "string"
      - name: "last_name"
        in: "query"
        description: "last name search parameter"
        required: false
        type: "string"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        404:
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_404"
definitions:
  Book:
    type: "object"
    required:
    - "_link"
    - "author"
    - "description"
    - "id"
    - "subject"
    - "title"
    properties:
      id:
        type: "integer"
        example: 105
      title:
        type: "string"
        example: "A Game of Thrones"
      description:
        type: "string"
        example: "From a master of contemporary fantasy comes the first novel of a\
          \ landmark series..."
      author:
        $ref: "#/definitions/Author"
      subject:
        $ref: "#/definitions/Subject"
      _link:
        type: "string"
        example: "/books/105"
  BookTwo:
    type: "object"
    required:
    - "_link"
    - "author"
    - "description"
    - "id"
    - "subject"
    - "title"
    properties:
      id:
        type: "integer"
        example: 106
      title:
        type: "string"
        example: "A Clash of Kings"
      description:
        type: "string"
        example: "In this eagerly awaited sequel to A Game of Thrones..."
      author:
        $ref: "#/definitions/Author"
      subject:
        $ref: "#/definitions/Subject"
      _link:
        type: "string"
        example: "/books/106"
  BookThree:
    type: "object"
    required:
    - "_link"
    - "author"
    - "description"
    - "id"
    - "subject"
    - "title"
    properties:
      id:
        type: "integer"
        example: 107
      title:
        type: "string"
        example: "A Storm of Swords"
      description:
        type: "string"
        example: "Here is the third volume in George R. R. Martinâ€™s magnificent..."
      author:
        $ref: "#/definitions/Author"
      subject:
        $ref: "#/definitions/Subject"
      _link:
        type: "string"
        example: "/books/107"
  Author:
    type: "object"
    required:
    - "_link"
    - "first_name"
    - "id"
    - "last_name"
    properties:
      id:
        type: "integer"
        example: 254
      first_name:
        type: "string"
        example: "George R.R."
      last_name:
        type: "string"
        example: "Martin"
      _link:
        type: "string"
        example: "/authors/254"
  Subject:
    type: "object"
    required:
    - "_link"
    - "description"
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        example: 396
      name:
        type: "string"
        example: "Science Fiction & Fantasy"
      description:
        type: "string"
        example: "Subject matter that ..."
      _link:
        type: "string"
        example: "/subjects/396"
  AllBooks:
    type: "object"
    required:
    - "results"
    - "status"
    properties:
      status:
        type: "integer"
        example: 200
      results:
        type: "array"
        items:
          type: "object"
          properties: {}
  inline_response_404:
    properties:
      status:
        type: "integer"
        example: 404
        description: "status code"
      message:
        type: "string"
        example: "Resource not found"
        description: "status string"
  new book object:
    type: "object"
    required:
    - "author_first_name"
    - "author_last_name"
    - "description"
    - "title"
    properties:
      title:
        type: "string"
        example: "A Clash of Kings"
      description:
        type: "string"
        example: "A book about dragons and stuff..."
      author_first_name:
        type: "string"
        example: "George"
      author_last_name:
        type: "string"
        example: "Martin"
      subject:
        type: "string"
        example: "Fiction"
  inline_response_200:
    properties:
      status:
        type: "integer"
        example: 200
        description: "status code"
      result:
        $ref: "#/definitions/Book"
  inline_response_200_1:
    properties:
      status:
        type: "integer"
        example: 200
        description: "status code"
      result:
        type: "array"
        items:
          $ref: "#/definitions/Author"
responses:
  404Response:
    description: "server error"
    schema:
      $ref: "#/definitions/inline_response_404"
